// <auto-generated />
using System;
using Dtol;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dtol.Migrations
{
    [DbContext(typeof(DtolContext))]
    [Migration("20190723011205_Bus_Info")]
    partial class Bus_Info
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dtol.dtol.Bus_Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate");

                    b.Property<int?>("Bus_LineId");

                    b.Property<string>("CarPlate");

                    b.Property<string>("Code");

                    b.Property<string>("DriverName");

                    b.Property<string>("OwnedCompany");

                    b.Property<string>("SeatNum");

                    b.Property<string>("phone");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("Bus_LineId");

                    b.ToTable("bus_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate");

                    b.Property<string>("Code");

                    b.Property<string>("LineName");

                    b.Property<string>("Remark");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updateDate");

                    b.HasKey("Id");

                    b.ToTable("bus_Line");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bus_InfoId");

                    b.Property<int?>("Bus_LineId");

                    b.Property<int?>("Bus_StationId");

                    b.Property<int?>("User_DepartId");

                    b.Property<int?>("User_InfoId");

                    b.Property<DateTime?>("createDate");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("Bus_InfoId");

                    b.HasIndex("Bus_LineId");

                    b.HasIndex("Bus_StationId");

                    b.HasIndex("User_DepartId");

                    b.HasIndex("User_InfoId");

                    b.ToTable("bus_Payment");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate");

                    b.Property<int?>("Bus_LineId");

                    b.Property<string>("Code");

                    b.Property<decimal?>("Expense");

                    b.Property<DateTime?>("OffWorkDate");

                    b.Property<DateTime?>("OnWorkDate");

                    b.Property<string>("StationName");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("Bus_LineId");

                    b.ToTable("bus_Station");
                });

            modelBuilder.Entity("Dtol.dtol.User_Depart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<string>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<int?>("Sort");

                    b.HasKey("Id");

                    b.ToTable("user_Depart");
                });

            modelBuilder.Entity("Dtol.dtol.User_Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddDate");

                    b.Property<string>("AddInfoDate");

                    b.Property<string>("Address");

                    b.Property<string>("AwardAndPunish");

                    b.Property<string>("Birthdate");

                    b.Property<string>("BloodType");

                    b.Property<string>("ComputerLevel");

                    b.Property<string>("ContractMaturityDate");

                    b.Property<string>("ContractSignDate");

                    b.Property<string>("Degree");

                    b.Property<string>("Dept");

                    b.Property<string>("DeptId");

                    b.Property<string>("DeptLeaderId");

                    b.Property<string>("DeptLeaderName");

                    b.Property<string>("DriveLevel");

                    b.Property<string>("DzbId");

                    b.Property<string>("Email");

                    b.Property<string>("EmployNature");

                    b.Property<string>("EntryDate");

                    b.Property<string>("FamilyMembers");

                    b.Property<string>("Files");

                    b.Property<string>("FinalEducation");

                    b.Property<string>("FinalGraduated");

                    b.Property<string>("FinalSpecialty");

                    b.Property<string>("ForeignLanguageLevel");

                    b.Property<string>("Gender");

                    b.Property<string>("HomeAddress");

                    b.Property<string>("Idcard");

                    b.Property<string>("InitialEducation");

                    b.Property<string>("InitialGraduated");

                    b.Property<string>("InitialSpecialty");

                    b.Property<string>("Interest");

                    b.Property<string>("JobPerformance");

                    b.Property<string>("JoinPartyDate");

                    b.Property<string>("Levels");

                    b.Property<string>("MaritalStatus");

                    b.Property<string>("MobileCall");

                    b.Property<string>("Nation");

                    b.Property<string>("NativePlace");

                    b.Property<string>("Number");

                    b.Property<int?>("OrderId");

                    b.Property<string>("PhoneCall");

                    b.Property<string>("PoliticalBackground");

                    b.Property<string>("Post");

                    b.Property<string>("Remark");

                    b.Property<string>("RoleIdNiwen");

                    b.Property<string>("RoleIds");

                    b.Property<string>("RoleNameNiwen");

                    b.Property<string>("RoleNames");

                    b.Property<string>("ServiceExperience");

                    b.Property<string>("Title");

                    b.Property<string>("TrainSituation");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPwd");

                    b.Property<int?>("User_DepartId");

                    b.Property<string>("WorkExperience");

                    b.Property<string>("ZipCode");

                    b.Property<string>("status");

                    b.Property<DateTime?>("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("User_DepartId");

                    b.ToTable("user_Info");
                });

            modelBuilder.Entity("Dtol.dtol.User_Relate_Info_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("User_InfoId");

                    b.Property<int>("User_RoleId");

                    b.HasKey("Id");

                    b.HasIndex("User_InfoId");

                    b.HasIndex("User_RoleId");

                    b.ToTable("user_Relate_Info_Role");
                });

            modelBuilder.Entity("Dtol.dtol.User_Relate_Role_Right", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("User_RightsId");

                    b.Property<int>("User_RoleId");

                    b.HasKey("Id");

                    b.HasIndex("User_RightsId");

                    b.HasIndex("User_RoleId");

                    b.ToTable("user_Relate_Role_Right");
                });

            modelBuilder.Entity("Dtol.dtol.User_Rights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<string>("RightsName");

                    b.Property<string>("RightsValue");

                    b.Property<int?>("Sort");

                    b.Property<string>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("user_Rights");
                });

            modelBuilder.Entity("Dtol.dtol.User_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Createdate");

                    b.Property<DateTime?>("Level");

                    b.Property<string>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<string>("RightsId");

                    b.Property<string>("RightsName");

                    b.Property<string>("RoleCode");

                    b.Property<string>("RoleName");

                    b.Property<string>("RoleType");

                    b.Property<string>("Status");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("user_Role");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Info", b =>
                {
                    b.HasOne("Dtol.dtol.Bus_Line", "Bus_Line")
                        .WithMany()
                        .HasForeignKey("Bus_LineId");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Payment", b =>
                {
                    b.HasOne("Dtol.dtol.Bus_Info", "Bus_Info")
                        .WithMany()
                        .HasForeignKey("Bus_InfoId");

                    b.HasOne("Dtol.dtol.Bus_Line", "Bus_Line")
                        .WithMany()
                        .HasForeignKey("Bus_LineId");

                    b.HasOne("Dtol.dtol.Bus_Station", "Bus_Station")
                        .WithMany()
                        .HasForeignKey("Bus_StationId");

                    b.HasOne("Dtol.dtol.User_Depart", "User_Depart")
                        .WithMany()
                        .HasForeignKey("User_DepartId");

                    b.HasOne("Dtol.dtol.User_Info", "User_Info")
                        .WithMany()
                        .HasForeignKey("User_InfoId");
                });

            modelBuilder.Entity("Dtol.dtol.Bus_Station", b =>
                {
                    b.HasOne("Dtol.dtol.Bus_Line", "Bus_Line")
                        .WithMany()
                        .HasForeignKey("Bus_LineId");
                });

            modelBuilder.Entity("Dtol.dtol.User_Info", b =>
                {
                    b.HasOne("Dtol.dtol.User_Depart", "User_Depart")
                        .WithMany("User_Info")
                        .HasForeignKey("User_DepartId");
                });

            modelBuilder.Entity("Dtol.dtol.User_Relate_Info_Role", b =>
                {
                    b.HasOne("Dtol.dtol.User_Info", "User_Info")
                        .WithMany("User_Relate_Info_Role")
                        .HasForeignKey("User_InfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dtol.dtol.User_Role", "User_Role")
                        .WithMany("User_Relate_Info_Role")
                        .HasForeignKey("User_RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dtol.dtol.User_Relate_Role_Right", b =>
                {
                    b.HasOne("Dtol.dtol.User_Rights", "User_Rights")
                        .WithMany("User_Relate_Role_Right")
                        .HasForeignKey("User_RightsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dtol.dtol.User_Role", "User_Role")
                        .WithMany("User_Relate_Role_Right")
                        .HasForeignKey("User_RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
